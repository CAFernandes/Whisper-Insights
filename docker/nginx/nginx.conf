# ====================================
# Whisper-Insights - Nginx Configuration
# ====================================

events {
    worker_connections 1024;
}

http {
    # Configurações básicas
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configurações de logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configurações de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Configurações de upload (importante para arquivos de áudio)
    client_max_body_size 500M;
    client_body_timeout 300s;
    client_header_timeout 300s;

    # Configurações de proxy
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/m;

    # Upstream para a aplicação Flask
    upstream whisper_app {
        server whisper-insights:5001;
    }

    # Upstream para Ollama
    upstream ollama_api {
        server ollama:11434;
    }

    # ====================================
    # Servidor HTTP (redirecionamento para HTTPS)
    # ====================================
    server {
        listen 80;
        server_name _;

        # Health check para load balancer
        location /health {
            proxy_pass http://whisper_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Redirecionamento para HTTPS (descomente em produção)
        # return 301 https://$server_name$request_uri;

        # Para desenvolvimento, servir diretamente
        location / {
            proxy_pass http://whisper_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # ====================================
    # Servidor HTTPS (para produção)
    # ====================================
    server {
        listen 443 ssl http2;
        server_name _;

        # Certificados SSL (configure conforme necessário)
        # ssl_certificate /etc/nginx/ssl/cert.pem;
        # ssl_certificate_key /etc/nginx/ssl/key.pem;

        # Configurações SSL modernas
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Headers de segurança
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

        # ====================================
        # Rotas da aplicação principal
        # ====================================
        location / {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://whisper_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Headers para WebSocket (se necessário no futuro)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # ====================================
        # Rotas de upload (rate limiting mais restritivo)
        # ====================================
        location /upload {
            limit_req zone=upload burst=5 nodelay;

            proxy_pass http://whisper_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Configurações especiais para upload
            proxy_request_buffering off;
            proxy_buffering off;
        }

        # ====================================
        # API do Ollama (proxy)
        # ====================================
        location /api/ollama/ {
            limit_req zone=api burst=10 nodelay;

            rewrite ^/api/ollama/(.*)$ /$1 break;
            proxy_pass http://ollama_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ====================================
        # Arquivos estáticos (cache agressivo)
        # ====================================
        location /static/ {
            proxy_pass http://whisper_app;
            proxy_cache_valid 200 1d;
            add_header Cache-Control "public, max-age=86400";
        }

        # ====================================
        # Health check
        # ====================================
        location /health {
            access_log off;
            proxy_pass http://whisper_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ====================================
        # Status do Nginx
        # ====================================
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Rede Docker
            deny all;
        }
    }
}
